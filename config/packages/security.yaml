security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            remember_me:
                    secret:   '%kernel.secret%'
                    lifetime: 604800 # 1 week in seconds
                    path:     /
                    # by default, the feature is enabled by checking a
                    # checkbox in the login form (see below), uncomment the
                    # following line to always enable it.
                    #always_remember_me: true
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\Authenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/client, roles: [ROLE_ADMIN, ROLE_CLIENT] }
        - { path: ^/candidate, roles: [ROLE_ADMIN, ROLE_CANDIDATE] }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN]
        ROLE_CLIENT: [ROLE_CLIENT]
        ROLE_USER: [ROLE_CANDIDATE]

    access_denied_url: /access-denied